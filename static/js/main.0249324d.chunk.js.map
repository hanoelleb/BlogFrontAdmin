{"version":3,"sources":["form.module.css","blog.module.css","constants/routes.js","login.js","register.js","edit.js","delete.js","blog.js","page.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","admin","LoginForm","props","handleSubmit","bind","handleChange","state","username","password","redirect","event","preventDefault","message","this","fetch","real","method","headers","body","JSON","stringify","then","response","json","data","localStorage","setItem","token","console","log","getItem","setState","target","name","value","isInvalid","to","className","styles","form","onSubmit","type","placeholder","onChange","disabled","React","Component","RegisterForm","pw_confirm","EditForm","title","content","post","id","handler","edit","onClick","rows","cols","DeleteConfirm","deleted","ROUTES","delete","Blog","waiting","posts","post_list","map","Dashboard","PostButton","openForm","formOpen","PostForm","handleSave","BlogPost","openPostPage","toPost","pageLink","_id","pathname","blog","Page","closeEdit","closeRemove","getUpdate","remove","location","comments","CommentThread","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.0249324d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete\":\"form_delete__qmU5z\",\"edit\":\"form_edit__260H3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blog\":\"blog_blog__3JtYz\"};","export const admin = '/BlogFrontAdmin';\nexport const landing = '/';\nexport const register = '/register';\nexport const blog = '/blog';\nexport const create_post = '/blog/post/create';\nexport const update_post = '/blog/post/:id/edit';\nexport const remove_post = '/blog/post/:id/remove';\nexport const post = '/blog/post/:id/';\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom'\nimport styles from './form.module.css';\n\nclass LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\tthis.state = ({username: '', password: '', redirect: false});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n\tconst message = {\n\t    username: this.state.username,\n            password: this.state.password\n\t};\n        \n\tvar test = 'http://localhost:8080/';\n        var real = 'https://hanoelleb-blog-api.herokuapp.com/';\n\tconst response =\n            fetch(real + 'api/login', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(message)})\n                .then(response => response.json())\n                .then( data => {\n\t\t    localStorage.setItem('token', data.token);\n                    console.log(localStorage.getItem('token'));\n\t\t    this.setState({redirect: true});\n                });\n    }\n\n    handleChange(event) {\n        this.setState({ [event.target.name] : event.target.value });\n    }\n\n    render() {\n        var isInvalid = this.username === '' ||\n\t\t        this.password === '';\n\n\tif (this.state.redirect) \n\t    return < Redirect to='/BlogFrontAdmin/blog' />\n        return (\n\t<div>\n            <form className={styles.form} onSubmit={this.handleSubmit}>\n\t\t<h2>Login</h2>\n\t\t<input type='text' placeholder='Username' name='username'\n\t\t    onChange={this.handleChange}\n\t\t    value={this.state.username}\n\t\t>\n\t\t</input>\n\n\t\t<input type='password' placeholder='Password' name='password'\n\t\t    onChange={this.handleChange}\n\t            value={this.state.password}\n\t\t>\n\t\t</input>\n\n\t\t<input type='submit' value='Login' disabled={isInvalid}>\n\t\t</input>\n            </form>\t\t\n\t    <Link to='/BlogFrontAdmin/register'>No account? Register</Link>\n\t</div>\n\t)\n    }\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './form.module.css';\n\nclass RegisterForm extends React.Component {\n    constructor(props) {\n        super(props);\n\tthis.handleSubmit = this.handleSubmit.bind(this);\n\tthis.handleChange = this.handleChange.bind(this);\n\tthis.state = { username: '', password: '', pw_confirm: ''};\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const message = { \n\t    username: this.state.username, \n\t    password: this.state.password \n\t};\n\n\tconst response = \n\t    fetch('https://hanoelleb-blog-api.herokuapp.com/api/register', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(message)})\n\t        .then(response => response.json())\n\t        .then( data => {\n\t            console.log('message: ' + data.message);\n\t        });\n    }\n\n    handleChange(event) {\n        this.setState({ [event.target.name] : event.target.value});\n    }\n\n    render() {\n        var isInvalid = this.state.username === '' ||\n\t\t      this.state.password === '' ||\n\t\t      this.state.pw_confirm === '' ||\n\t\t      this.state.password !== this.state.pw_confirm;\n\n        return (\n\t<div>\n            <form className={styles.form} onSubmit={this.handleSubmit}>\n                <h2>Register</h2>\n                <input type='text' placeholder='Username' name='username'\n\t\t    onChange={this.handleChange} value={this.state.username}>\n\t\t</input>\n\n                <input type='password' placeholder='Password' name='password'\n\t\t    onChange={this.handleChange} value={this.state.password}>\n\t\t</input>\n\n\t\t<input type='password' placeholder='Confirm Password'\n\t\t    name='pw_confirm' onChange={this.handleChange}\n\t\t    value={this.state.pw_confirm}>\n\t\t</input>\n\n                <input type='submit' value='Submit' disabled={isInvalid}>\n\t\t</input>\n            </form>\n\t    <Link to='/BlogFrontAdmin/'>Have an account?</Link>\n\t</div>\n        )\n    }\n}\n\nexport default RegisterForm;\n\n","import React from 'react';\nimport styles from './form.module.css';\n\nclass EditForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = ({title: this.props.title, content: this.props.content});\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleSubmit(event) {\n\tevent.preventDefault();\n        const post = {\n            title: this.state.title,\n            content: this.state.content\n\t};\n\n\tvar test = 'http://localhost:8080/';\n        var real = 'https://hanoelleb-blog-api.herokuapp.com/';\n    \n        fetch(real + 'api/post/' + this.props.id + '/edit',\n            {\n                method: 'POST',\n                headers: {\n                    'Authorization': localStorage.getItem('token'),\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(post)\n            }).then( response => response.json())\n\t      .then( data => {\n\t\t  console.log(data.message);\n\t\t  if (this.props.handler != null)\n\t\t      this.props.handler();\n\t    });\n    }\n\n    render() {\n        return (\n\t    <form className={styles.edit} onSubmit={this.handleSubmit}>\n                <button onClick={this.props.handler}>Cancel</button>\n                <input type='text' name='title'\n                    onChange={this.handleChange}\n                    value = {this.state.title}\n                    placeholder='Post title'>\n                </input>\n\n                <textarea rows='10' cols='40' name='content'\n                    onChange={this.handleChange}\n                    value = {this.state.content}\n                    placeholder='Post content'>\n                </textarea>\n\n                <input type='submit' value='Update'></input>\n            </form>\n\t)\n    }\n}\n\nexport default EditForm;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\n\nimport * as ROUTES from './constants/routes';\nimport styles from './form.module.css';\n\nclass DeleteConfirm extends React.Component {\n    constructor(props) {\n        super(props);\n\tthis.state = ({ deleted: false });\n\tthis.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event) {\n\tvar test = 'http://localhost:8080/';\n        var real = 'https://hanoelleb-blog-api.herokuapp.com/';\n\n        event.preventDefault();\n\tfetch(real + 'api/post/' + this.props.id + '/remove',\n            {\n                method: 'POST',\n                headers: {\n                    'Authorization': localStorage.getItem('token'),\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n            }).then( response => response.json())\n              .then( data => {\n                  console.log(data.message);\n\t\t  this.setState({deleted: true });\n            });\n\n\t//this.props.handler();\n\n    }\n\n    render() {\n        if (this.state.deleted)\n\t    return < Redirect to={ROUTES.admin + ROUTES.blog} />\n\treturn (\n        <form className={styles.delete} onSubmit={this.handleSubmit}>\n            <p>Are you sure want to delete this post?</p>\n\t    <button onClick={this.props.handler}>Cancel</button>\n            <input type='submit' value='Delete'></input>\n        </form>\n\t)\n    }\n}\n\nexport default DeleteConfirm;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport EditForm from './edit'; \nimport DeleteConfirm from './delete';\n\nimport styles from './blog.module.css';\n\nclass Blog extends React.Component {\n    constructor(props) {\n        super(props);\n\tthis.state = ({token: localStorage.getItem('token'), \n\t    waiting: true, posts: []});\n    }\n\n    componentDidMount() {\n\tvar test = 'http://localhost:8080/';\n        var real = 'https://hanoelleb-blog-api.herokuapp.com/';\n        fetch(real + 'api/posts')\n\t    .then( response => response.json() )\n\t    .then( data => { \n\t\tthis.setState({posts: data.posts.post_list, waiting: false});\n\t    });\n    }\n\n    render() {\n\tif (this.state.token === '') {\n\t    return < Redirect to='/BlogFrontAdmin/' />\n\t}\n        return (\n\t    <div>\n\t\t<h2>Your Blog</h2>\n\t\t<Dashboard />\n\t\t{ this.state.waiting ? '' : \n\t\t    this.state.posts.map( post => \n                        < BlogPost post={post} />\n\t\t    )\n\t\t}\n            </div>\n\t)\n    }\n}\n\nclass Dashboard extends React.Component {\n    render() {\n        return (\n\t    <div>\n\t\t< PostButton />\n\t\t<button>Drafts</button>\n            </div>\n\t)\n    }\n}\n\nclass PostButton extends React.Component {\n    constructor(props) {\n        super(props);\n\tthis.handler = this.handler.bind(this);\n\tthis.openForm = this.openForm.bind(this);\n\tthis.state = ({formOpen: false});\n    }\n\n    handler() {\n        this.setState({formOpen: false});\n    }\n\n    openForm() {\n        this.setState({formOpen: true});\n    }\n\n    render() {\n        return (\n            <div>\n\t        <button onClick={this.openForm}>New Post</button>\n\t\t{ this.state.formOpen ? \n\t\t    <PostForm handler={this.handler} /> : null }\n            </div>\n\t)\n    }\n}\n\nclass PostForm extends React.Component {\n    constructor(props) {\n        super(props);\n\tthis.handleChange = this.handleChange.bind(this);\n\tthis.handleSave = this.handleSave.bind(this);\n\tthis.handleSubmit = this.handleSubmit.bind(this);\n\tthis.state = ({title: '', content: ''});\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleSave() {\n    }\n\n    handleSubmit(event) {\n\tevent.preventDefault();\n\tconst post = {\n\t    title: this.state.title,\n\t    content: this.state.content\n\t};\n        var test = 'http://localhost:8080/';\n\tvar real = 'https://hanoelleb-blog-api.herokuapp.com/';\n\tconst response =\n\t    fetch(real + 'api/post/create',\n\t    {\n                method: 'POST',\n\t\theaders: {\n\t\t    'Authorization': localStorage.getItem('token'),\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify(post)\n\t    }).then( response => response.json())\n              .then( data => {\n\t\t      console.log(data.message);\n\t\t  }\n\t      );\n\n\t this.props.handler();\n    }\n\n    render() {\n        return (\n\t    <form onSubmit={this.handleSubmit}>\n\t\t<button onClick={this.props.handler}>Cancel</button>\n                <input type='text' name='title' \n                    onChange={this.handleChange}\n\t\t    value = {this.state.title}\n\t\t    placeholder='Post Title'>\n\t\t</input>\n\n\t\t<textarea rows='10' cols='40' name='content' \n\t\t    onChange={this.handleChange}\n\t\t    value = {this.state.content}\n\t\t    placeholder='Post content'>\n\t\t</textarea>\n\n\t\t<button>Save</button>\n\t\t<input type='submit' value='Post'></input>\n            </form>\n\t)\n    }\n}\n\nclass BlogPost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.openPostPage = this.openPostPage.bind(this);\n\tthis.state = ({toPost : false});\n    }\n\n    openPostPage() {\n\tthis.setState({toPost: true});\n    }\n\n    render() {\n\tvar pageLink = '/BlogFrontAdmin/blog/post/' + this.props.post._id;\n\tif (!this.state.toPost) {\n          return (\n\t    <div className={styles.blog}>\n\t         <h2 onClick={this.openPostPage}>\n\t\t     {this.props.post.title}\n\t\t </h2>\n                 <p>{this.props.post.content}</p>\n            </div>\n\t  )} \n\telse {\n          return (\n             < Redirect to={{ \n\t\t  pathname: pageLink, \n\t\t  state: { id: this.props.post._id,\n\t\t           title: this.props.post.title,\n\t\t           content: this.props.post.content } \n\t     }}/>\n\t  )}\n    }\n}\n\nexport default Blog;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport EditForm from './edit';\nimport DeleteConfirm from './delete';\n\nimport styles from './blog.module.css';\n\nimport * as ROUTES from './constants/routes';\n\nclass Page extends React.Component {\n    constructor(props) {\n        super(props);\n\tthis.closeEdit = this.closeEdit.bind(this);\n\tthis.closeRemove =  this.closeRemove.bind(this);\n\tthis.getUpdate = this.getUpdate.bind(this);\n\tthis.state = ({waiting: true, edit: false, remove: false,\n\t    title: '', content: '', id: ''\n\t});\n    }\n\n    componentDidMount() {\n        if (this.props.location.state.title != null)\n\t    this.setState({title: this.props.location.state.title});\n\n\tif (this.props.location.state.content != null)\n            this.setState({content: this.props.location.state.content});\n\n\tif (this.props.location.state.id != null)\n            this.setState({id: this.props.location.state.id});\n\n        var test = 'http://localhost:8080/';\n        var real = 'https://hanoelleb-blog-api.herokuapp.com/';\n        fetch(real + 'api/post/' + this.props.location.state.id, \n\t{\n\t    headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n\t})\n            .then( response => response.json() )\n            .then( data => {\n                this.setState({ post: data.post,\n                    comments: data.comments, \n                    waiting: false});\n            });\n\n    }\n\n    getUpdate() {\n        var real = 'https://hanoelleb-blog-api.herokuapp.com/';\n        fetch(real + 'api/post/' + this.props.location.state.id,\n        {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n        })\n            .then( response => response.json() )\n            .then( data => {\n                this.setState({post: data.post,\n                    title: data.post.title,\n                    content: data.post.content,\n                    comments: data.comments,\n                    edit: false });\n            });\n\n    }\n\n    closeEdit() {\n        this.setState({edit: false});\n    }\n\n    closeRemove() {\n        this.setState({remove: false});\n    }\n\n    render() {\n\tif (this.state.waiting)\n\t    return <h2>Loading...</h2>\n        return (\n\t<div>\n\t    <Link to={ROUTES.admin + ROUTES.blog} >View all posts</Link>\n\t    <div className={styles.blog}>\n\t        <h2>{this.state.title}</h2>\n                <p>{this.state.content}</p>\n\n                <button onClick={() => { this.setState({edit: true}) } }>\n\t\t    Edit\n\t\t</button>\n\n                <button onClick={() => { this.setState({remove: true}) } }>\n                    Remove\n                </button>\n                \n\t\t{ this.state.edit ? \n\t\t< EditForm handler={this.closeEdit}\n                  title={this.state.title}\n\t\t  content={this.state.content}\n                  id={this.state.id}\n\t\t  handler={this.getUpdate}\n\t\t/>\n                  :\n\t\t  null\n\t\t}\n\n\t\t{ this.state.remove ?\n\t\t    < DeleteConfirm handler={this.closeRemove} \n                      id={this.state.id}\n                    />\n                  :\n                  null\n                }\n            </div>\n\t    <CommentThread />\n\t</div>\n\t)\n    }\n}\n\nclass CommentThread extends React.Component {\n    render() {\n        return <h3>Comments</h3>\n    }\n}\n\nexport default Page;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport './App.css';\nimport * as ROUTES from './constants/routes';\nimport LoginForm from './login';\nimport RegisterForm from './register';\nimport Blog from './blog';\nimport Page from './page';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\t  <Router>\n              <Route exact path={ROUTES.admin + ROUTES.landing} \n\t          component={LoginForm} />\n\t      <Route path={ROUTES.admin + ROUTES.register} \n\t          component={RegisterForm} />\n\t      <Route exact path={ROUTES.admin + ROUTES.blog} \n\t          component={Blog} />\n              <Route exact path={ROUTES.admin + ROUTES.post}\n                  component={Page} />\n\t  </Router>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}